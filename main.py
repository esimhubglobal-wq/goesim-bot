import os
import logging
from aiogram import Bot, Dispatcher, executor, types

logging.basicConfig(level=logging.INFO)

BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID", "0"))
SIMO_URL = os.getenv("SIMO_URL", "")

if not BOT_TOKEN:
    raise RuntimeError("Environment variable BOT_TOKEN is not set")

bot = Bot(BOT_TOKEN, parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot)

@dp.message_handler(commands=["start"])
async def cmd_start(m: types.Message):
    text = (
        "–ü—Ä–∏–≤–µ—Ç! –Ø Go_ESIM –±–æ—Ç.\n"
        "–•–æ—á–µ—à—å –±—ã—Å—Ç—Ä—ã–π eSIM –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π? üëâ <a href='{0}'>–û—Ñ–æ—Ä–º–∏—Ç—å</a>\n"
        "–ù–∞–ø–∏—à–∏ –º–Ω–µ —Å—Ç—Ä–∞–Ω—É –∏–ª–∏ –≥–æ—Ä–æ–¥ ‚Äî –ø–æ–¥—Å–∫–∞–∂—É, –∫–∞–∫ –≤—ã–≥–æ–¥–Ω–µ–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è."
    ).format(SIMO_URL or "https://t.me/Go_ESIM")
    await m.answer(text, disable_web_page_preview=True)

    if ADMIN_ID and m.from_user.id != ADMIN_ID:
        u = m.from_user
        uname = f'@{u.username}' if u.username else "(–±–µ–∑ username)"
        await bot.send_message(ADMIN_ID, f"–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {u.id} {uname}")

@dp.message_handler()
async def fallback(m: types.Message):
    await m.answer("–ù–∞–ø–∏—à–∏ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å üôÇ")

if __name__ == "__main__":
    logging.info("Bot starting‚Ä¶")
    executor.start_polling(dp, skip_updates=True)
